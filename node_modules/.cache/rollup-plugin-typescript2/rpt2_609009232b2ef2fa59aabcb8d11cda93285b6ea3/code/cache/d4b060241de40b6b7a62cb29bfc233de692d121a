{"code":"import { __extends } from \"tslib\";\r\nimport Constantes from '../constantes';\r\nimport Jugador from '../gameobjects/jugador';\r\nimport Enemigos from '../gameobjects/enemigos';\r\nimport PlataformasMoviles from '../gameobjects/plataformasmoviles';\r\nvar Nivel1 = /** @class */ (function (_super) {\r\n    __extends(Nivel1, _super);\r\n    function Nivel1() {\r\n        return _super.call(this, Constantes.ESCENAS.NIVEL1) || this;\r\n    }\r\n    Nivel1.prototype.init = function () {\r\n        this.width = this.cameras.main.width;\r\n        this.height = this.cameras.main.height;\r\n        this.vidas = 3;\r\n        this.puntuacion = 0;\r\n        //Con el sistema de registro global de variables\r\n        //inicializamos las del juego                \r\n        this.registry.set(Constantes.REGISTRO.VIDAS, this.vidas);\r\n        this.registry.set(Constantes.REGISTRO.PUNTUACION, this.puntuacion);\r\n        this.segundos = 1;\r\n        this.tiempoRestante = 300;\r\n        this.tiempoAgotado = false;\r\n    };\r\n    Nivel1.prototype.preload = function () {\r\n    };\r\n    Nivel1.prototype.create = function () {\r\n        //const logo = this.add.image(400, 70, 'logo1');\r\n        var _this = this;\r\n        var jugarTxt = this.add.text(50, this.height / 2, 'NIVEL 1', { fontSize: '32px', color: '#FFFFFF' });\r\n        var puntuacionTxt = this.add.text(this.width / 2, this.height / 2 + 100, 'Puntuacion', { fontSize: '32px', color: '#FFFFFF' })\r\n            .setInteractive();\r\n        puntuacionTxt.on('pointerdown', function () {\r\n            _this.puntuacion++;\r\n            _this.registry.set(Constantes.REGISTRO.PUNTUACION, _this.puntuacion);\r\n            _this.events.emit(Constantes.EVENTOS.PUNTUACION);\r\n        });\r\n        /*Cargar Tilemap*/\r\n        this.mapaNivel = this.make.tilemap({ key: Constantes.MAPAS.NIVEL1.TILEMAPJSON, tileWidth: 16, tileHeight: 16 });\r\n        this.physics.world.bounds.setTo(0, 0, this.mapaNivel.widthInPixels, this.mapaNivel.heightInPixels);\r\n        //jugador\r\n        this.mapaNivel.findObject(Constantes.JUGADOR.ID, function (d) {\r\n            _this.jugador = new Jugador({\r\n                escena: _this,\r\n                x: d.x,\r\n                y: d.y,\r\n                textura: Constantes.JUGADOR.ID\r\n            });\r\n        });\r\n        //las cámaras siguen al jugador\r\n        this.cameras.main.setBounds(0, 0, this.mapaNivel.widthInPixels, this.mapaNivel.heightInPixels);\r\n        this.cameras.main.startFollow(this.jugador);\r\n        this.conjuntoPatrones = this.mapaNivel.addTilesetImage(Constantes.MAPAS.TILESET);\r\n        this.capaMapaNivel = this.mapaNivel.createLayer(Constantes.MAPAS.NIVEL1.CAPAPLATAFORMAS, this.conjuntoPatrones);\r\n        this.capaMapaNivel.setCollisionByExclusion([-1]);\r\n        //Fondo\r\n        this.imagenFondo = this.add.tileSprite(0, 0, this.mapaNivel.widthInPixels, this.mapaNivel.heightInPixels, Constantes.FONDOS.NIVEL1).setOrigin(0, 0).setDepth(-1);\r\n        //Animaciones\r\n        this.anims.create({\r\n            key: Constantes.JUGADOR.ANIMACION.ESPERA,\r\n            frames: this.anims.generateFrameNames(Constantes.JUGADOR.ID, { prefix: Constantes.JUGADOR.ANIMACION.ESPERA + '-',\r\n                end: 11 }),\r\n            frameRate: 20,\r\n            repeat: -1\r\n        });\r\n        this.anims.create({\r\n            key: Constantes.JUGADOR.ANIMACION.CORRER,\r\n            frames: this.anims.generateFrameNames(Constantes.JUGADOR.ID, {\r\n                prefix: Constantes.JUGADOR.ANIMACION.CORRER + '-',\r\n                end: 11\r\n            }),\r\n            frameRate: 20,\r\n            repeat: -1\r\n        });\r\n        //crea la animacion de explosion        \r\n        this.anims.create({\r\n            key: Constantes.ENEMIGOS.EXPLOSION.ANIM,\r\n            frames: Constantes.ENEMIGOS.EXPLOSION.ID,\r\n            frameRate: 15,\r\n            repeat: 0\r\n        });\r\n        this.physics.add.collider(this.jugador, this.capaMapaNivel);\r\n        //Crea sprite con posición final \r\n        var objetofinal = this.mapaNivel.createFromObjects(Constantes.MAPAS.POSICIONFINAL, { name: Constantes.MAPAS.POSICIONFINAL })[0];\r\n        this.physics.world.enable(objetofinal);\r\n        objetofinal.body.setAllowGravity(false);\r\n        objetofinal.setTexture(Constantes.OBJETOS.FINAL);\r\n        objetofinal.body.setSize(40, 50);\r\n        objetofinal.body.setOffset(10, 15);\r\n        //collisión para final del nivel\r\n        this.physics.add.collider(this.jugador, objetofinal, function () {\r\n            _this.scene.stop(Constantes.ESCENAS.NIVEL1);\r\n            _this.scene.stop(Constantes.ESCENAS.HUD);\r\n            _this.scene.start(Constantes.ESCENAS.MENU);\r\n        });\r\n        //Añade los enemigos obteniendolos de la capa de objetos del mapa\r\n        this.bunnyGroup = new Enemigos(this, Constantes.MAPAS.ENEMIGOS, Constantes.ENEMIGOS.BUNNY.ID, Constantes.ENEMIGOS.BUNNY.ANIM, Constantes.ENEMIGOS.BUNNY.VELOCIDAD, { size: { x: 30, y: 30 }, offset: { x: 0, y: 10 } });\r\n        this.physics.add.collider(this.bunnyGroup, this.capaMapaNivel);\r\n        this.physics.add.overlap(this.jugador, this.bunnyGroup, this.jugador.enemigoToca, null, this);\r\n        //Chicken Group\r\n        this.chickenGroup = new Enemigos(this, Constantes.MAPAS.ENEMIGOS, Constantes.ENEMIGOS.CHICKEN.ID, Constantes.ENEMIGOS.CHICKEN.ANIM, Constantes.ENEMIGOS.CHICKEN.VELOCIDAD, { size: { x: 30, y: 30 }, offset: { x: 0, y: 0 } });\r\n        this.physics.add.collider(this.chickenGroup, this.capaMapaNivel);\r\n        this.physics.add.overlap(this.jugador, this.chickenGroup, this.jugador.enemigoToca, null, this);\r\n        //Plataformas móviles\r\n        this.plataformasMovilesH = new PlataformasMoviles(this, Constantes.MAPAS.PLATAFORMASMOVILES, Constantes.OBJETOS.PLATAFORMAMOVIL.ID, Constantes.OBJETOS.PLATAFORMAMOVIL.VELOCIDAD, true);\r\n        this.plataformasMovilesV = new PlataformasMoviles(this, Constantes.MAPAS.PLATAFORMASMOVILES, Constantes.OBJETOS.PLATAFORMAMOVIL.ID, Constantes.OBJETOS.PLATAFORMAMOVIL.VELOCIDAD, false);\r\n        this.physics.add.collider(this.jugador, [this.plataformasMovilesH, this.plataformasMovilesV]);\r\n        this.physics.add.collider(this.capaMapaNivel, [this.plataformasMovilesH, this.plataformasMovilesV]);\r\n    };\r\n    Nivel1.prototype.update = function (time) {\r\n        //mover el fondo\r\n        this.imagenFondo.tilePositionY -= 0.4;\r\n        if (parseInt(this.registry.get(Constantes.REGISTRO.VIDAS)) === 0) {\r\n            this.scene.stop(Constantes.ESCENAS.NIVEL1);\r\n            this.scene.stop(Constantes.ESCENAS.HUD);\r\n            this.scene.start(Constantes.ESCENAS.MENU);\r\n        }\r\n        this.jugador.update();\r\n        this.bunnyGroup.update();\r\n        this.chickenGroup.update();\r\n        this.plataformasMovilesH.update();\r\n        this.plataformasMovilesV.update();\r\n        //Gestión del Tiempo\r\n        if ((this.segundos != Math.floor(Math.abs(time / 1000))) && !this.tiempoAgotado) {\r\n            this.segundos = Math.floor(Math.abs(time / 1000));\r\n            this.tiempoRestante--;\r\n            var minutos = Math.floor(this.tiempoRestante / 60);\r\n            var segundos = Math.floor(this.tiempoRestante - (minutos * 60));\r\n            var textoReloj = Phaser.Utils.String.Pad(minutos, 2, '0', 1) + \":\" + Phaser.Utils.String.Pad(segundos, 2, '0', 1);\r\n            //Registro\r\n            this.registry.set(Constantes.REGISTRO.RELOJ, textoReloj);\r\n            //envío al HUD\r\n            this.events.emit(Constantes.EVENTOS.RELOJ);\r\n            //Cuando el tiempo termine GAME OVER\r\n            if (this.tiempoRestante == 0) {\r\n                this.tiempoAgotado = true;\r\n                this.scene.stop(Constantes.ESCENAS.NIVEL1);\r\n                this.scene.stop(Constantes.ESCENAS.HUD);\r\n                this.scene.start(Constantes.ESCENAS.MENU);\r\n            }\r\n        }\r\n    };\r\n    return Nivel1;\r\n}(Phaser.Scene));\r\nexport default Nivel1;\r\n","references":["C:/Users/Amit/Downloads/2D_Platform_Game_Phaser-main/src/constantes.ts","C:/Users/Amit/Downloads/2D_Platform_Game_Phaser-main/src/gameobjects/jugador.ts","C:/Users/Amit/Downloads/2D_Platform_Game_Phaser-main/src/gameobjects/enemigos.ts","C:/Users/Amit/Downloads/2D_Platform_Game_Phaser-main/src/gameobjects/plataformasmoviles.ts"]}
